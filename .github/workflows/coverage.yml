name: Coverage

on:
  push:
    branches: [ master ]
    paths:
      - '**/*.cpp'
      - '**/*.hpp'
      - 'cmake/**'
      - 'CMakeLists.txt'
      - '.github/workflows/coverage.yml'

jobs:
  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Install build and coverage tools
        run: sudo apt update && sudo apt install -y gcc g++ ccache gcovr lcov ninja-build

      - name: Restore ccache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.ccache
          key: ${{ runner.os }}-ccache-gcc-Coverage

      - name: Restore build directory
        uses: actions/cache@v3
        with:
          path: build/gcc-Coverage
          key: ${{ runner.os }}-build-gcc-Coverage

      - name: Configure → Build → Test (Coverage)
        env:
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          CMAKE_C_COMPILER_LAUNCHER: ccache
          CMAKE_CXX_COMPILER_LAUNCHER: ccache
        run: cmake --workflow --preset coverage-report

      - name: Generate coverage XML
        run: cmake --build --preset gcc-Coverage --target coverage

      - name: Save ccache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.ccache
          key: ${{ runner.os }}-ccache-gcc-Coverage

      - name: Save build directory
        uses: actions/cache@v3
        with:
          path: build/gcc-Coverage
          key: ${{ runner.os }}-build-gcc-Coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: build/gcc-Coverage/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
